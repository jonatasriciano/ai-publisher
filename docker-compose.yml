# Define the services required for the ai-publisher project
services:
  # Backend service configuration
  backend:
    build:
      context: ./backend  # Set the context directory for building the backend
      dockerfile: Dockerfile  # Reference the Dockerfile for backend
    volumes:
      - ./backend:/app  # Mount the backend directory to /app in the container
      - /app/node_modules  # Use a volume to store node_modules separately
    ports:
      - "9000:9000"  # Map port 9000 of the container to port 9000 on the host
    environment:
      - NODE_ENV=development  # Set the NODE_ENV environment variable to development
    depends_on:
      - mongo  # Ensure that the backend starts after MongoDB
    command: npm run dev  # Command to run the backend server in development mode

  # Frontend service configuration
  frontend:
    build:
      context: ./frontend  # Set the context directory for building the frontend
      dockerfile: Dockerfile  # Reference the Dockerfile for frontend
    volumes:
      - ./frontend:/app  # Mount the frontend directory to /app in the container
      - /app/node_modules  # Use a volume to store node_modules separately
    ports:
      - "3000:3000"  # Map port 3000 of the container to port 3000 on the host
    environment:
      - NODE_ENV=development  # Set the NODE_ENV environment variable to development
    command: npm run start  # Command to start the frontend development server

  # MongoDB service configuration
  mongo:
    image: mongo:latest  # Use the latest MongoDB image
    ports:
      - "27017:27017"  # Map port 27017 of the container to port 27017 on the host
    volumes:
      - mongo-data:/data/db  # Use a volume for MongoDB data persistence

# Define volumes used by the services
volumes:
  mongo-data:  # Named volume to store MongoDB data persistently